/api/v1/categories:
  get:
    summary: List all categories.
    description: List all categories.
    operationId: getCategories
    tags:
      - categories
    parameters:
{{ includeDefaultParameter('page', 2) }}
    responses:
      '200':
        description: A list of categories
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Category'
  post:
    summary: Store a new category
    description: Creates a new category. The data required can be submitted as a JSON body or as a list of parameters.
    operationId: storeCategory
    tags:
      - categories
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategoryUpdate'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/CategoryUpdate'
      description: "JSON array or key=value pairs with the necessary category information. See the model for the exact specifications."
      required: true
    responses:
      '200':
        description: 'New category stored, result in response.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      '422':
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
/api/v1/categories/{id}:
  get:
    summary: Get a single category.
    description: Get a single category.
    operationId: getCategory
    parameters:
{{ includeDefaultParameter('id', 2) }}
    tags:
      - categories
    responses:
      '200':
        description: 'The requested category'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      '404':
        description: Category not found
  put:
    operationId: updateCategory
    tags:
      - categories
    description: Update existing category.
    summary: Update existing category.
    parameters:
{{ includeDefaultParameter('id', 2) }}
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategoryUpdate'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/CategoryUpdate'
      description: JSON array with updated category information. See the model for the exact specifications.
      required: true
    responses:
      '200':
        description: 'Updated category stored, result in response'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      '422':
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
  delete:
    operationId: deleteCategory
    description: Delete an category.
    summary: Delete an category.
    tags:
      - categories
    parameters:
{{ includeDefaultParameter('id', 2) }}
    responses:
      '204':
        description: Category deleted.
      '404':
        description: No such category
/api/v1/categories/{id}/transactions:
  get:
    summary: List all transactions in a category.
    description: List all transactions in a category, optionally limited to the date ranges specified.
    operationId: getTransactionsByCategory
    tags:
      - categories
    parameters:
{{ includeDefaultParameter('page', 2) }}
{{ includeDefaultParameter('start_date', 2) }}
{{ includeDefaultParameter('end_date', 2) }}
{{ includeDefaultParameter('transaction_type', 2) }}
    responses:
      '200':
        description: A list of transactions
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Transaction'
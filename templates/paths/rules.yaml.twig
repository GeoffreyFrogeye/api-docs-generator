/api/v1/rules:
  get:
    summary: List all rules.
    description: List all rules.
    operationId: getRules
    tags:
      - rules
    parameters:
{{ includeDefaultParameter('page', 2) }}
    responses:
      '200':
        description: A list of rules
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Rule'
  post:
    summary: Store a new rule
    description: Creates a new rule. The data required can be submitted as a JSON body or as a list of parameters.
    operationId: storeRule
    tags:
      - rules
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RuleUpdate'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/RuleUpdate'
      description: "JSON array or key=value pairs with the necessary rule information. See the model for the exact specifications."
      required: true
    responses:
      '200':
        description: 'New rule stored, result in response.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rule'
      '422':
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
/api/v1/rules/{id}:
  get:
    summary: Get a single rule.
    description: Get a single rule.
    operationId: getRule
    parameters:
{{ includeDefaultParameter('id', 2) }}
    tags:
      - rules
    responses:
      '200':
        description: 'The requested rule'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rule'
      '404':
        description: Rule not found
  put:
    operationId: updateRule
    tags:
      - rules
    description: Update existing rule.
    summary: Update existing rule.
    parameters:
{{ includeDefaultParameter('id', 2) }}
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RuleUpdate'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/RuleUpdate'
      description: JSON array with updated rule information. See the model for the exact specifications.
      required: true
    responses:
      '200':
        description: 'Updated rule stored, result in response'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rule'
      '422':
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
  delete:
    operationId: deleteRule
    description: Delete an rule.
    summary: Delete an rule.
    tags:
      - rules
    parameters:
{{ includeDefaultParameter('id', 2) }}
    responses:
      '204':
        description: Rule deleted.
      '404':
        description: No such rule
/api/v1/rules/{id}/test:
  get:
    summary: Test which transactions would be hit by the rule. No changes will be made.
    description: Test which transactions would be hit by the rule. No changes will be made. Limit the result if you want to.
    operationId: testRule
    tags:
      - rules
    parameters:
{{ includeDefaultParameter('page', 2) }}
{{ includeDefaultParameter('start_date', 2) }}
{{ includeDefaultParameter('end_date', 2) }}
    - in: query
      name: search_limit
      description: |
        Maximum number of transactions the rule will be triggered on, before Firefly III stops. Don't set this too high.
      required: false
      schema:
        type: integer
    - in: query
      name: triggered_limit
      description: |
        Maximum number of transactions the rule can be triggered on, before Firefly III stops.
      required: false
      schema:
        type: integer
    - in: query
      name: accounts
      style: matrix
      explode: false
      description: |
        Limit the testing of the rule to these asset accounts.
      required: false
      example: 1,2,3
      schema:
        type: string
    responses:
      '200':
        description: A list of transactions
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Transaction'
/api/v1/rules/{id}/trigger:
  post:
    summary: Fire the rule on your transactions.
    description: Test which transactions would be hit by the rule. No changes will be made. Limit the result if you want to.
    operationId: testRule
    tags:
      - rules
    parameters:
{{ includeDefaultParameter('page', 2) }}
{{ includeDefaultParameter('start_date', 2) }}
{{ includeDefaultParameter('end_date', 2) }}
    - in: query
      name: search_limit
      description: |
        Maximum number of transactions the rule will be triggered on, before Firefly III stops. Don't set this too high.
      required: false
      schema:
        type: integer
    - in: query
      name: triggered_limit
      description: |
        Maximum number of transactions the rule can be triggered on, before Firefly III stops.
      required: false
      schema:
        type: integer
    - in: query
      name: accounts
      style: matrix
      explode: false
      description: |
        Limit the firing of the rule to these asset accounts.
      required: false
      example: 1,2,3
      schema:
        type: string
    responses:
      '200':
        description: A list of transactions
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Transaction'

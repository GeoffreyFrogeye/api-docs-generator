/api/v1/budgets:
  get:
    summary: List all budgets.
    description: List all the budgets the user has made. If the start date and end date are submitted as well, the "spent" array will be updated accordingly.
    operationId: getBudgets
    tags:
      - budgets
    parameters:
{{ includeDefaultParameter('page', 2) }}
{{ includeDefaultParameter('start_date', 2) }}
{{ includeDefaultParameter('end_date', 2) }}
    responses:
      '200':
        description: A list of budgets.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Budget'
  post:
    summary: Store a new budget
    description: Creates a new budget. The data required can be submitted as a JSON body or as a list of parameters.
    operationId: storeBudget
    tags:
      - budgets
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BudgetUpdate'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/BudgetUpdate'
      description: "JSON array or key=value pairs with the necessary budget information. See the model for the exact specifications."
      required: true
    responses:
      '200':
        description: 'New budget stored, result in response.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Budget'
      '422':
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
/api/v1/budgets/{budgetID}:
  get:
    summary: Get a single budget.
    description: Get a single budget. If the start date and end date are submitted as well, the "spent" array will be updated accordingly.
    operationId: getBudget
    parameters:
{{ includeDefaultParameter('budgetID', 2) }}
{{ includeDefaultParameter('start_date', 2) }}
{{ includeDefaultParameter('end_date', 2) }}
    tags:
      - budgets
    responses:
      '200':
        description: 'The requested budget'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Budget'
      '404':
        description: Budget not found
  put:
    operationId: updateBudget
    tags:
      - budgets
    description: Update existing budget. This endpoint cannot be used to set budget amount limits
    summary: Update existing budget.
    parameters:
{{ includeDefaultParameter('budgetID', 2) }}
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BudgetUpdate'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/BudgetUpdate'
      description: JSON array with updated budget information. See the model for the exact specifications.
      required: true
    responses:
      '200':
        description: 'Updated budget stored, result in response'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Budget'
      '422':
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
  delete:
    operationId: deleteBudget
    description: Delete an budget.
    summary: Delete an budget.
    tags:
      - budgets
    parameters:
{{ includeDefaultParameter('budgetID', 2) }}
    responses:
      '204':
        description: Budget deleted.
      '404':
        description: No such budget

/api/v1/budgets/{budgetID}/transactions:
  get:
    summary: All transactions to a budget.
    description: Get all transactions linked to a budget, possibly limited by start_date and end_date
    operationId: getTransactionsByBudget
    tags:
      - budgets
    parameters:
{{ includeDefaultParameter('page', 2) }}
{{ includeDefaultParameter('start_date', 2) }}
{{ includeDefaultParameter('end_date', 2) }}
{{ includeDefaultParameter('transaction_type', 2) }}
    responses:
      '200':
        description: A list of transactions.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Transaction'

/api/v1/budgets/{budgetID}/limits:
  get:
    operationId: getBudgetLimits
    description: |
        Get all budget limits for this budget and the money spent, and money left. You can limit the list by submitting a date range as well. The "spent" array for each budget limit is NOT influenced by the start and end date of your query, but by the start and end date of the budget limit itself.
    summary: Get all limits
    tags:
      - budgets
    parameters:
{{ includeDefaultParameter('budgetID', 2) }}
{{ includeDefaultParameter('start_date', 2) }}
{{ includeDefaultParameter('end_date', 2) }}
    responses:
      '200':
        description: A list of budget limits applicable to this budget
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BudgetLimit'
  post:
    operationId: storeBudgetLimit
    description: Store a new budget limit.
    summary: Store new budget limit.
    tags:
      - budgets
    parameters:
{{ includeDefaultParameter('budgetID', 2) }}
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BudgetUpdate'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/BudgetUpdate'
      description: "JSON array or key=value pairs with the necessary budget information. See the model for the exact specifications."
      required: true
    responses:
      '200':
        description: 'New budget stored, result in response.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Budget'
      '422':
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
/api/v1/budgets/{budgetID}/limits/{budgetLimitID}:
  get:
    summary: Get single budget limit.
    operationId: getBudgetLimit
    tags:
      - budgets
    parameters:
{{ includeDefaultParameter('budgetID', 2) }}
{{ includeDefaultParameter('budgetLimitID', 2) }}
    responses:
      '200':
        description: 'The requested budget limit'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BudgetLimit'
      '404':
        description: Budget limit not found
  put:
    operationId: updateBudgetLimit
    tags:
      - budgets
    description: Update existing budget limit.
    summary: Update existing budget limit.
    parameters:
{{ includeDefaultParameter('budgetID', 2) }}
{{ includeDefaultParameter('budgetLimitID', 2) }}
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BudgetLimitUpdate'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/BudgetLimitUpdate'
      description: JSON array with updated budget limit information. See the model for the exact specifications.
      required: true
    responses:
      '200':
        description: 'Updated budget limit stored, result in response'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BudgetLimit'
      '422':
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
  delete:
    operationId: deleteBudgetLimit
    description: Delete an budget limit.
    summary: Delete an budget limit.
    tags:
      - budgets
    parameters:
{{ includeDefaultParameter('budgetID', 2) }}
{{ includeDefaultParameter('budgetLimitID', 2) }}
    responses:
      '204':
        description: Budget limit deleted.
      '404':
        description: No such budget limit
/api/v1/budgets/{budgetID}/limits/{budgetLimitID}/transactions:
  get:
    summary: List all transactions by a budget limit ID.
    description: List all the budgets within one budget limit. The start and end date are dictated by the budget limit.
    operationId: getTransactionsByBudgetLimit
    tags:
      - budgets
    parameters:
{{ includeDefaultParameter('page', 2) }}
{{ includeDefaultParameter('transaction_type', 2) }}
    responses:
      '200':
        description: A list of budgets.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Transaction'
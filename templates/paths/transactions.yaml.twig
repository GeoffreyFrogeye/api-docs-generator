/api/v1/transactions:
  get:
    summary: List all the users transactions.
    description: List all the users transactions.
    operationId: getTransactions
    tags:
      - transactions
    parameters:
{{ includeDefaultParameter('page', 2) }}
{{ includeDefaultParameter('start_date', 2) }}
{{ includeDefaultParameter('end_date', 2) }}
{{ includeDefaultParameter('transaction_type', 2) }}
    responses:
      '200':
        description: A list of transactions
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Transaction'
  post:
    summary: Store a new transaction
    description: Creates a new transaction. The data required can be submitted as a JSON body or as a list of parameters.
    operationId: storeTransaction
    tags:
      - transactions
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionUpdate'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TransactionUpdate'
      description: "JSON array or key=value pairs with the necessary transaction information. See the model for the exact specifications."
      required: true
    responses:
      '200':
        description: 'New transaction stored, result in response.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      '422':
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
/api/v1/transactions/{id}:
  get:
    summary: Get a single transaction.
    description: Get a single transaction.
    operationId: getTransaction
    parameters:
{{ includeDefaultParameter('id', 2) }}
    tags:
      - transactions
    responses:
      '200':
        description: 'The requested transaction'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      '404':
        description: Transaction not found
  put:
    operationId: updateTransaction
    tags:
      - transactions
    description: Update existing transaction.
    summary: Update existing transaction.
    parameters:
{{ includeDefaultParameter('id', 2) }}
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionUpdate'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TransactionUpdate'
      description: JSON array with updated transaction information. See the model for the exact specifications.
      required: true
    responses:
      '200':
        description: 'Updated transaction stored, result in response'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      '422':
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
  delete:
    operationId: deleteTransaction
    description: Delete an transaction.
    summary: Delete an transaction.
    tags:
      - transactions
    parameters:
{{ includeDefaultParameter('id', 2) }}
    responses:
      '204':
        description: Transaction deleted.
      '404':
        description: No such transaction
/api/v1/transactions/{id}/links:
  get:
    summary: Lists all linked transactions.
    description: Lists all linked transactions.
    operationId: getLinkedTransactions
    tags:
      - transactions
    parameters:
    - in: query
      name: link_type_id
      description: Link type ID of the links you want to see.
      required: false
      schema:
        type: integer
        example: 1
{{ includeDefaultParameter('page', 2) }}
{{ includeDefaultParameter('start_date', 2) }}
{{ includeDefaultParameter('end_date', 2) }}
{{ includeDefaultParameter('transaction_type', 2) }}
    responses:
      '200':
        description: A list of transactions
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Transaction'
/api/v1/transactions/{id}/attachments:
  get:
    summary: Lists all attachments.
    description: Lists all attachments.
    operationId: getAttachmentsByTransactions
    tags:
      - transactions
    parameters:
{{ includeDefaultParameter('page', 2) }}
    responses:
      '200':
        description: A list of attachments
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Attachment'
/api/v1/transactions/{id}/piggy_bank_events:
  get:
    summary: Lists all piggy bank events.
    description: Lists all piggy bank events.
    operationId: getEventsByTransactions
    tags:
      - transactions
    parameters:
{{ includeDefaultParameter('page', 2) }}
    responses:
      '200':
        description: A list of piggy bank events
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PiggyBankEvent'
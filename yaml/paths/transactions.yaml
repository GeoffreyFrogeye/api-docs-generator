/api/v1/transactions:
  get:
    summary: |
      List all the user's transactions.
    description: List all the user's transactions.
    operationId: getTransactions
    tags:
      - transactions
    parameters:
    - in: query
      name: page
      description: Page number. The default pagination is 50.
      required: false
      schema:
        type: integer
        example: 1
    - in: query
      name: start
      description: |
        A date formatted YYYY-MM-DD. This is the start date of the selected range (inclusive).
      required: false
      schema:
        type: string
        example: 2018-09-17
    - in: query
      name: end
      description: |
        A date formatted YYYY-MM-DD. This is the end date of the selected range (inclusive).
      required: false
      schema:
        type: string
        example: 2018-09-17
    - in: query
      name: type
      description: Optional filter on the transaction type(s) returned.
      required: false
      schema:
        type: string
        enum:
        - all
        - withdrawal
        - withdrawals
        - expense
        - deposit
        - deposits
        - income
        - transfer
        - transfers
        - opening_balance
        - reconciliation
        - special
        - specials
        - default
    responses:
      '200':
        description: A list of transactions.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionArray'
  post:
    summary: Store a new transaction
    description: Creates a new transaction. The data required can be submitted as a JSON body or as a list of parameters.
    operationId: storeTransaction
    tags:
      - transactions
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionUpdate'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TransactionUpdate'
      description: "JSON array or key=value pairs with the necessary transaction information. See the model for the exact specifications."
      required: true
    responses:
      '200':
        description: 'New transaction stored(s), result in response.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionArray'
      '422':
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
/api/v1/transactions/{id}:
  get:
    summary: Get a single transaction.
    description: Get a single transaction.
    operationId: getTransaction
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the transaction. Note that this ID is different from the ID you see in the URL of your Firefly III instance.
    tags:
      - transactions
    responses:
      '200':
        description: 'The requested transaction.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionSingle'
      '404':
        description: Transaction not found.
  put:
    operationId: updateTransaction
    tags:
      - transactions
    description: Update an existing transaction.
    summary: Update existing transaction.
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the transaction.
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionUpdate'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/TransactionUpdate'
      description: JSON array with updated transaction information. See the model for the exact specifications.
      required: true
    responses:
      '200':
        description: 'Updated transaction stored, result in response'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionSingle'
      '422':
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
  delete:
    operationId: deleteTransaction
    description: Delete a transaction.
    summary: Delete a transaction.
    tags:
      - transactions
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the transaction.
    responses:
      '204':
        description: Transaction deleted.
      '404':
        description: No such transaction.
/api/v1/transactions/{id}/attachments:
  get:
    summary: Lists all attachments.
    description: Lists all attachments.
    operationId: getAttachmentsByTransactions
    tags:
      - transactions
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the transaction.
    - in: query
      name: page
      description: Page number. The default pagination is 50.
      required: false
      schema:
        type: integer
        example: 1
    responses:
      '200':
        description: A list of attachments
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentArray'
      '404':
        description: No such transaction.
/api/v1/transactions/{id}/piggy_bank_events:
  get:
    summary: Lists all piggy bank events.
    description: Lists all piggy bank events.
    operationId: getEventsByTransactions
    tags:
      - transactions
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the transaction.
    - in: query
      name: page
      description: Page number. The default pagination is 50.
      required: false
      schema:
        type: integer
        example: 1
    responses:
      '200':
        description: A list of piggy bank events.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PiggyBankEventArray'
      '404':
        description: No such transaction.
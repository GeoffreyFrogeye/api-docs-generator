/api/v1/currencies:
  get:
    summary: List all currencies.
    description: List all currencies.
    operationId: getCurrencies
    tags:
      - currencies
    parameters:
    - in: query
      name: page
      description: Page number. The default pagination is per 50 items. X
      required: false
      schema:
        type: integer
        example: 1
    responses:
      '200':
        description: A list of currencies
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Currency'
  post:
    summary: Store a new currency
    description: Creates a new currency. The data required can be submitted as a JSON body or as a list of parameters.
    operationId: storeCurrency
    tags:
      - currencies
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CurrencyUpdate'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/CurrencyUpdate'
      description: "JSON array or key=value pairs with the necessary currency information. See the model for the exact specifications."
      required: true
    responses:
      '200':
        description: 'New currency stored, result in response.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Currency'
      '422':
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
/api/v1/currencies/{id}:
  get:
    summary: Get a single currency.
    description: Get a single currency.
    operationId: getCurrency
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the object.X
    tags:
      - currencies
    responses:
      '200':
        description: 'The requested currency'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Currency'
      '404':
        description: Currency not found
  put:
    operationId: updateCurrency
    tags:
      - currencies
    description: Update existing currency.
    summary: Update existing currency.
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the object.X
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CurrencyUpdate'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/CurrencyUpdate'
      description: JSON array with updated currency information. See the model for the exact specifications.
      required: true
    responses:
      '200':
        description: 'Updated currency stored, result in response'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Currency'
      '422':
        description: 'Validation errors (see body)'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
  delete:
    operationId: deleteCurrency
    description: Delete an currency.
    summary: Delete an currency.
    tags:
      - currencies
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the object.X
    responses:
      '204':
        description: Currency deleted.
      '404':
        description: No such currency
/api/v1/currencies/{id}/accounts:
  get:
    summary: List all accounts with this currency.
    description: List all accounts with this currency.
    operationId: getAccountsByCurrency
    tags:
      - currencies
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the object.X
    - in: query
      name: page
      description: Page number. The default pagination is per 50 items. X
      required: false
      schema:
        type: integer
        example: 1
    responses:
      '200':
        description: A list of accounts
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Accounts'
/api/v1/currencies/{id}/available_budgets:
  get:
    summary: List all available budgets with this currency.
    description: List all available budgets with this currency.
    operationId: getAvailableBudgetsByCurrency
    tags:
      - currencies
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the object.X
    - in: query
      name: page
      description: Page number. The default pagination is per 50 items. X
      required: false
      schema:
        type: integer
        example: 1
    responses:
      '200':
        description: A list of available budgets
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AvailableBudget'
/api/v1/currencies/{id}/bills:
  get:
    summary: List all bills with this currency.
    description: List all bills with this currency.
    operationId: getBillsByCurrency
    tags:
      - currencies
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the object.X
    - in: query
      name: page
      description: Page number. The default pagination is per 50 items. X
      required: false
      schema:
        type: integer
        example: 1
    responses:
      '200':
        description: A list of bills
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Bill'
/api/v1/currencies/{id}/budget_limits:
  get:
    summary: List all budget limits with this currency
    description: List all budget limits with this currency
    operationId: getBudgetLimitsByCurrency
    tags:
      - currencies
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the object.X
    - in: query
      name: page
      description: Page number. The default pagination is per 50 items. X
      required: false
      schema:
        type: integer
        example: 1
    responses:
      '200':
        description: A list of budget limits
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BudgetLimit'
/api/v1/currencies/{id}/cer:
  get:
    summary: List all known exchange rates with (from or to) this currency.
    description: List all known exchange rates.
    operationId: getExchangeRatesByCurrency
    tags:
      - currencies
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the object.X
    - in: query
      name: page
      description: Page number. The default pagination is per 50 items. X
      required: false
      schema:
        type: integer
        example: 1
    responses:
      '200':
        description: A list of exchange rates
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ExchangeRate'
/api/v1/currencies/{id}/recurrences:
  get:
    summary: List all recurring transactions with this currency.
    description: List all recurring transactions with this currency.
    operationId: getRecurrencesByCurrency
    tags:
      - currencies
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the object.X
    - in: query
      name: page
      description: Page number. The default pagination is per 50 items. X
      required: false
      schema:
        type: integer
        example: 1
    responses:
      '200':
        description: A list of recurring transactions
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Recurring'
/api/v1/currencies/{id}/rules:
  get:
    summary: List all rules with this currency.
    description: List all rules with this currency.
    operationId: getRulesByCurrency
    tags:
      - currencies
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the object.X
    - in: query
      name: page
      description: Page number. The default pagination is per 50 items. X
      required: false
      schema:
        type: integer
        example: 1
    responses:
      '200':
        description: A list of rules with this currency
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Rule'
/api/v1/currencies/{id}/transactions:
  get:
    summary: List all transactions with this currency.
    description: List all transactions with this currency.
    operationId: getTransactionsByCurrency
    tags:
      - currencies
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: integer
        example: 1
      description: The ID of the object.X
    - in: query
      name: page
      description: Page number. The default pagination is per 50 items. X
      required: false
      schema:
        type: integer
        example: 1
    - in: query
      name: start_date
      description: |
        A date formatted YYYY-MM-DD. X
      required: false
      schema:
        type: string
        example: 2018-09-17
    - in: query
      name: end_date
      description: |
        A date formatted YYYY-MM-DD. X
      required: false
      schema:
        type: string
        example: 2018-12-31
    - in: query
      name: type
      description: Optional filter on the transaction type(s) returned
      required: false
      schema:
        type: string
        enum:
        - all
        - withdrawal
        - withdrawals
        - expense
        - deposit
        - deposits
        - income
        - transfer
        - transfers
        - opening_balance
        - reconciliation
        - special
        - specials
        - default
    responses:
      '200':
        description: A list of transactions
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Transaction'